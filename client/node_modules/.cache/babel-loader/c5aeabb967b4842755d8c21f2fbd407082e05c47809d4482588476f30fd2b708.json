{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\anfit\\\\client\\\\src\\\\components\\\\Table\\\\Table.js\";\nimport React from 'react';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  columns,\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n      children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"col\", {\n        style: {\n          width: col.colWidth ? col.colWidth : 'auto'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columns.map((col, index) => col.header ? /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: col.colspan || undefined,\n          rowSpan: col.rowspan || undefined,\n          className: \"tit\",\n          children: col.header\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columns.map((col, colIndex) => {\n          const cell = row[col.accessor];\n          const colSpanValue = row.colspan && row.colspan[col.accessor] ? row.colspan[col.accessor] : col.colspan || 1;\n          const rowSpanValue = row.rowspan && row.rowspan[col.accessor] ? row.rowspan[col.accessor] : col.rowspan || 1;\n          if (!cell) return null;\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: colSpanValue > 1 ? colSpanValue : undefined,\n            rowSpan: rowSpanValue > 1 ? rowSpanValue : undefined,\n            children: cell\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Table","columns","data","className","children","map","col","index","style","width","colWidth","fileName","_jsxFileName","lineNumber","columnNumber","header","colSpan","colspan","undefined","rowSpan","rowspan","row","rowIndex","colIndex","cell","accessor","colSpanValue","rowSpanValue","_c","$RefreshReg$"],"sources":["C:/workspace/anfit/client/src/components/Table/Table.js"],"sourcesContent":["import React from 'react';\r\nimport './table.css';\r\n\r\n\r\nconst Table = ({ columns, data }) => {\r\n  return (\r\n    <table className=\"table-wrap\">\r\n      <colgroup>\r\n        {columns.map((col, index) => (\r\n            <col \r\n              key={index}\r\n              style={{ width: col.colWidth ? col.colWidth : 'auto' }}\r\n            />\r\n          ))}\r\n      </colgroup>\r\n      <thead>\r\n        <tr>\r\n          {columns.map((col, index) => col.header ? (\r\n            <th \r\n              key={index}\r\n              colSpan={col.colspan || undefined}\r\n              rowSpan={col.rowspan || undefined}\r\n              className=\"tit\"\r\n            >\r\n              {col.header}\r\n            </th>\r\n          ) : null\r\n        )}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            {columns.map((col, colIndex) => {\r\n              const cell = row[col.accessor];\r\n              const colSpanValue = row.colspan && row.colspan[col.accessor] ? row.colspan[col.accessor] : col.colspan || 1;\r\n              const rowSpanValue = row.rowspan && row.rowspan[col.accessor] ? row.rowspan[col.accessor] : col.rowspan || 1;\r\n\r\n              if (!cell) return null;\r\n\r\n              return (\r\n                <td\r\n                  key={colIndex}\r\n                  colSpan={colSpanValue > 1 ? colSpanValue : undefined}\r\n                  rowSpan={rowSpanValue > 1 ? rowSpanValue : undefined}\r\n                >\r\n                  {cell}\r\n                </td>\r\n              );\r\n            })}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    \r\n  );\r\n};\r\n\r\nexport default Table;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}