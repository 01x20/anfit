{"ast":null,"code":"import React from'react';import'./table.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Table=_ref=>{let{columns,data}=_ref;return/*#__PURE__*/_jsxs(\"table\",{className:\"table-wrap\",children:[/*#__PURE__*/_jsx(\"colgroup\",{children:columns.map((col,index)=>/*#__PURE__*/_jsx(\"col\",{style:{width:col.colWidth?col.colWidth:'auto'}},index))}),/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map((col,index)=>col.header?/*#__PURE__*/_jsx(\"th\",{colSpan:col.colspan||undefined,rowSpan:col.rowspan||undefined,className:\"tit\",children:col.header},index):null)})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"tr\",{children:columns.map((col,colIndex)=>{const cell=row[col.accessor];const colSpanValue=row.colspan&&row.colspan[col.accessor]?row.colspan[col.accessor]:col.colspan||1;const rowSpanValue=row.rowspan&&row.rowspan[col.accessor]?row.rowspan[col.accessor]:col.rowspan||1;if(!cell)return null;return/*#__PURE__*/_jsx(\"td\",{colSpan:colSpanValue>1?colSpanValue:undefined,rowSpan:rowSpanValue>1?rowSpanValue:undefined,children:cell},colIndex);})},rowIndex))})]});};export default Table;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Table","_ref","columns","data","className","children","map","col","index","style","width","colWidth","header","colSpan","colspan","undefined","rowSpan","rowspan","row","rowIndex","colIndex","cell","accessor","colSpanValue","rowSpanValue"],"sources":["C:/workspace/anfit/client/src/components/Table/Table.js"],"sourcesContent":["import React from 'react';\r\nimport './table.css';\r\n\r\n\r\nconst Table = ({ columns, data }) => {\r\n  return (\r\n    <table className=\"table-wrap\">\r\n      <colgroup>\r\n        {columns.map((col, index) => (\r\n            <col \r\n              key={index}\r\n              style={{ width: col.colWidth ? col.colWidth : 'auto' }}\r\n            />\r\n          ))}\r\n      </colgroup>\r\n      <thead>\r\n        <tr>\r\n          {columns.map((col, index) => col.header ? (\r\n            <th \r\n              key={index}\r\n              colSpan={col.colspan || undefined}\r\n              rowSpan={col.rowspan || undefined}\r\n              className=\"tit\"\r\n            >\r\n              {col.header}\r\n            </th>\r\n          ) : null\r\n        )}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            {columns.map((col, colIndex) => {\r\n              const cell = row[col.accessor];\r\n              const colSpanValue = row.colspan && row.colspan[col.accessor] ? row.colspan[col.accessor] : col.colspan || 1;\r\n              const rowSpanValue = row.rowspan && row.rowspan[col.accessor] ? row.rowspan[col.accessor] : col.rowspan || 1;\r\n\r\n              if (!cell) return null;\r\n\r\n              return (\r\n                <td\r\n                  key={colIndex}\r\n                  colSpan={colSpanValue > 1 ? colSpanValue : undefined}\r\n                  rowSpan={rowSpanValue > 1 ? rowSpanValue : undefined}\r\n                >\r\n                  {cell}\r\n                </td>\r\n              );\r\n            })}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    \r\n  );\r\n};\r\n\r\nexport default Table;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGrB,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,OAAO,CAAEC,IAAK,CAAC,CAAAF,IAAA,CAC9B,mBACEF,KAAA,UAAOK,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC3BR,IAAA,aAAAQ,QAAA,CACGH,OAAO,CAACI,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACpBX,IAAA,QAEEY,KAAK,CAAE,CAAEC,KAAK,CAAEH,GAAG,CAACI,QAAQ,CAAGJ,GAAG,CAACI,QAAQ,CAAG,MAAO,CAAE,EADlDH,KAEN,CACF,CAAC,CACI,CAAC,cACXX,IAAA,UAAAQ,QAAA,cACER,IAAA,OAAAQ,QAAA,CACGH,OAAO,CAACI,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,GAAKD,GAAG,CAACK,MAAM,cACrCf,IAAA,OAEEgB,OAAO,CAAEN,GAAG,CAACO,OAAO,EAAIC,SAAU,CAClCC,OAAO,CAAET,GAAG,CAACU,OAAO,EAAIF,SAAU,CAClCX,SAAS,CAAC,KAAK,CAAAC,QAAA,CAEdE,GAAG,CAACK,MAAM,EALNJ,KAMH,CAAC,CACH,IACN,CAAC,CACG,CAAC,CACA,CAAC,cACRX,IAAA,UAAAQ,QAAA,CACGF,IAAI,CAACG,GAAG,CAAC,CAACY,GAAG,CAAEC,QAAQ,gBACtBtB,IAAA,OAAAQ,QAAA,CACGH,OAAO,CAACI,GAAG,CAAC,CAACC,GAAG,CAAEa,QAAQ,GAAK,CAC9B,KAAM,CAAAC,IAAI,CAAGH,GAAG,CAACX,GAAG,CAACe,QAAQ,CAAC,CAC9B,KAAM,CAAAC,YAAY,CAAGL,GAAG,CAACJ,OAAO,EAAII,GAAG,CAACJ,OAAO,CAACP,GAAG,CAACe,QAAQ,CAAC,CAAGJ,GAAG,CAACJ,OAAO,CAACP,GAAG,CAACe,QAAQ,CAAC,CAAGf,GAAG,CAACO,OAAO,EAAI,CAAC,CAC5G,KAAM,CAAAU,YAAY,CAAGN,GAAG,CAACD,OAAO,EAAIC,GAAG,CAACD,OAAO,CAACV,GAAG,CAACe,QAAQ,CAAC,CAAGJ,GAAG,CAACD,OAAO,CAACV,GAAG,CAACe,QAAQ,CAAC,CAAGf,GAAG,CAACU,OAAO,EAAI,CAAC,CAE5G,GAAI,CAACI,IAAI,CAAE,MAAO,KAAI,CAEtB,mBACExB,IAAA,OAEEgB,OAAO,CAAEU,YAAY,CAAG,CAAC,CAAGA,YAAY,CAAGR,SAAU,CACrDC,OAAO,CAAEQ,YAAY,CAAG,CAAC,CAAGA,YAAY,CAAGT,SAAU,CAAAV,QAAA,CAEpDgB,IAAI,EAJAD,QAKH,CAAC,CAET,CAAC,CAAC,EAjBKD,QAkBL,CACL,CAAC,CACG,CAAC,EACH,CAAC,CAGZ,CAAC,CAED,cAAe,CAAAnB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}